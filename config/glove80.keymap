/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&tog 3>, <&tog 5>;
        };

        hm_r: hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
        };

        hm_l: hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };

        tab_or_layer: tab_or_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAB_OR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "tap-preferred";
        };

        repeat: repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "REPEAT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <300>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        HRM_left_index_v1_TKZ: HRM_left_index_v1_TKZ {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_INDEX_V1_TKZ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <52 53 69 70 71 54 55 56 57 72 73 74 75 59 58 40 41 42 60 76 61 77 43 44 45 63 62 78 79 33 32 20 21 9 8 7 19 31 30 18 6 5 17 16 28 29>;
        };

        HRM_left_middy_v1_TKZ: HRM_left_middy_v1_TKZ {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_MIDDY_V1_TKZ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <52 53 69 70 71 54 55 56 57 72 73 74 75 59 58 40 41 42 60 76 61 77 43 44 45 63 62 78 79 33 32 20 21 9 8 7 19 31 30 18 6 5 17 16 28 29>;
        };

        HRM_left_pinky_v1_TKZ: HRM_left_pinky_v1_TKZ {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_PINKY_V1_TKZ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <260>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <52 53 69 70 71 54 55 56 57 72 73 74 75 59 58 40 41 42 60 76 61 77 43 44 45 63 62 78 79 33 32 20 21 9 8 7 19 31 30 18 6 5 17 16 28 29>;
        };

        HRM_left_ring_v1_TKZ: HRM_left_ring_v1_TKZ {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_RING_V1_TKZ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <52 53 69 70 71 54 55 56 57 72 73 74 75 59 58 40 41 42 60 76 61 77 43 44 45 63 62 78 79 33 32 20 21 9 8 7 19 31 30 18 6 5 17 16 28 29>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <53 56>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <73 70>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1     &kp F2                         &kp F3                        &kp F4                          &kp F5                                                                                                                                   &kp F6            &kp F7             &kp F8     &kp F9    &kp F10
&kp GRAVE  &kp N1                         &kp N2                        &kp N3                          &kp N4                           &kp N5                                                                                          &kp N6  &kp N7            &kp N8             &kp N9     &kp N0    &kp MINUS
&kp TAB    &kp Q                          &kp W                         &kp E                           &kp R                            &kp T                                                                                           &kp Y   &kp U             &kp I              &kp O      &kp P     &kp BACKSLASH
&kp ESC    &HRM_left_pinky_v1_TKZ LGUI A  &HRM_left_ring_v1_TKZ LALT S  &HRM_left_middy_v1_TKZ LCTRL D  &HRM_left_index_v1_TKZ LSHIFT F  &kp G                                                                                           &kp H   &kp J             &kp K              &kp L      &kp SEMI  &kp SINGLE_QUOTE
&kp GRAVE  &kp Z                          &kp X                         &kp C                           &kp V                            &kp B   &kp LEFT_GUI  &kp LALT    &kp DELETE    &trans    &kp RSHIFT       &kp RCTRL            &kp N   &kp M             &kp COMMA          &kp DOT    &kp FSLH  &kp UP
&mo 4      &kp HOME                       &kp END                       &kp LEFT                        &kp RIGHT                                &kp SPACE     &kp LSHIFT  &kp LCTRL     &kp RALT  &repeat 2 ENTER  &repeat 1 BACKSPACE          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL  &kp PLUS  &kp DOWN
            >;
        };

        SYMBOL {
            bindings = <
&trans  &trans           &trans       &trans          &trans                                                                                                       &trans                 &trans           &trans             &trans  &kp PSCRN
&trans  &trans           &trans       &trans          &trans                &trans                                                              &trans             &trans                 &trans           &trans             &trans  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND       &kp DOLLAR            &kp PERCENT                                                         &kp CARET          &kp AMPERSAND          &kp ASTERISK     &kp MINUS          &trans  &trans
&trans  &trans           &trans       &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET                                                    &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp DOUBLE_QUOTES  &trans  &trans
&trans  &trans           &trans       &trans          &trans                &trans            &trans  &trans  &trans    &trans  &trans  &trans  &kp BACKSLASH      &trans                 &trans           &trans             &trans  &trans
&trans  &trans           &trans       &trans          &trans                                  &trans  &trans  &trans    &trans  &trans  &trans                     &trans                 &trans           &trans             &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                      &trans         &trans       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                    &trans    &trans         &trans       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                    &trans    &trans         &trans       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans    &trans  &trans  &trans            &trans         &trans       &trans     &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                          &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none         &none       &none       &none     &kp HOME                                                     &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &none         &none       &trans      &none     &kp END                                                      &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &none         &trans      &trans      &trans    &kp PG_UP                                                    &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12   &kp PG_DN  &trans  &trans  &trans    &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &kp CAPS      &kp INS     &kp F11     &kp F12              &trans  &trans  &trans    &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &trans           &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &trans          &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &tog 5           &tog 3                            &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        GAMING {
            bindings = <
&trans  &trans      &trans  &trans  &trans                                                                             &trans  &trans  &trans     &trans   &trans
&trans  &trans      &trans  &trans  &trans  &trans                                                             &trans  &trans  &trans  &trans     &trans   &trans
&trans  &kp GRAVE   &kp B   &kp N   &kp M   &kp SQT                                                            &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH
&kp T   &kp TAB     &kp A   &kp S   &kp D   &kp F                                                              &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P
&kp G   &kp LSHIFT  &kp A   &kp S   &kp D   &kp F    &kp ESC    &kp RET   &trans    &kp BSPC  &kp DEL  &trans  &kp G   &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp V   &kp LCTRL   &kp Z   &kp X   &kp C            &kp SPACE  &kp LALT  &trans    &trans    &trans   &trans          &trans  &trans  &trans     &trans   &trans
            >;
        };
    };
};
